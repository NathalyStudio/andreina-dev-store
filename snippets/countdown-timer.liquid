{% comment %} 
USE: 
      {% render 'countdown-timer', countdown-date: block.settings.countdown-date, color_scheme-timer: block.settings.color_scheme-timer, countdown-text: block.settings.countdown-text, enable-link: block.settings.enable-link, countdown-link: block.settings.countdown-link, days: block.settings.days-label, hours: block.settings.hours-label, minutes: : block.settings.minutes-label, seconds: block.settings.seconds-label, enable-days: block.settings.enable_days  %}
{% endcomment %}
<style>
  .countdown-announcement-bar-message{
    padding: unset;
    margin: auto 0;
  }
  #countdown-timer {
    display: flex;
    justify-content: center;
    margin-top: auto;
    margin-bottom: auto;
    margin-left: 1rem;
  }
  
  .countdown-number {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2.7rem;
    height: 2.7rem;
    background-color: white;
    color: black;
    font-size: 1.7rem;
    font-weight: bold;
    margin-right: .3rem;
  }
  
  .countdown-label {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 2.7rem;
    font-weight: bold;
    color: white;
    margin-right: 0.3rem;
  }
  @media screen and (max-width: 550px) {
    .countdown-number {
      margin-right: 5px;
    }
  
    .countdown-label {
      font-size: 12px;
      margin-right: 5px;
    }

    .countdown-wrapper.announcement-bar.swiper-slide {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding-bottom: 1rem;
    }
  }
   /*This is for be more accessible and compliant with ADA guidelines*/
   .countdown-wrapper:focus {
    outline: 3px solid #007eff;
    outline-offset: 2px;
  }
</style>
<div class="countdown-wrapper announcement-bar swiper-slide color-{{ color_scheme-timer }}" role="timer" aria-label="Countdown timer" aria-live="assertive" aria-atomic="true" style="display: flex; justify-content: center;" aria-describedby="countdown-description">
  {% unless enable-link == true %}
    <p class="announcement-bar__message countdown-announcement-bar-message" >{{ countdown-text }}</p>
  {% endunless %}  
  {% if enable-link == true %}
    <a href="{{ countdown-link }}" class="announcement-bar__message announcement-bar__link link link--text focus-inset animate-arrow" aria-labelledby="{{ countdown-text }}" style="width: unset; padding: 0.5rem 0;">{{ countdown-text }}</a>
  {% endif %}
  <div id="countdown-timer">
    {% if enable-days == true %}
      <div class="countdown-number" id="days" aria-label="Days"></div>
      <div class="countdown-label" aria-hidden="true">{{ days }}</div>
    {% endif %}
    <div class="countdown-number" id="hours" aria-label="Hours"></div>
    <div class="countdown-label" aria-hidden="true">{{ hours }}</div>
    <div class="countdown-number" id="minutes" aria-label="Minutes"></div>
    <div class="countdown-label" aria-hidden="true">{{ minutes }}</div>
    <div class="countdown-number" id="seconds" aria-label="Seconds"></div>
    {% unless seconds == blank %}
      <div class="countdown-label" aria-hidden="true">{{ seconds }}</div>
    {% endunless %} 
  </div>
</div>
<div id="countdown-description" class="visually-hidden">
  <p>This is a countdown timer that displays the remaining time until a specified date and time. The timer updates every second.</p>
</div>
{% if enable-days == true %}
  <script>
    // Set the date we're counting down to
    var countDownDate = new Date("{{ countdown-date | escape }} 00:00:00").getTime();
    // Update the countdown every 1 second
    var countdownInterval = setInterval(function() {
      // Get the current date and time
      var now = new Date().getTime();
      // Calculate the distance between now and the countdown date
      var distance = countDownDate - now;
      // Calculate the days, hours, minutes, and seconds left

      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);
      // Add a leading zero to the hours, minutes, and seconds numbers if they are less than 10
      hours = hours < 10 ? "0" + hours : hours;
      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;
      // Display the countdown in the HTML element
      document.getElementById("days").innerHTML = ("0" + days).slice(-2);
      document.getElementById("hours").innerHTML = ("0" + hours).slice(-2);
      document.getElementById("minutes").innerHTML = ("0" + minutes).slice(-2);
      document.getElementById("seconds").innerHTML = ("0" + seconds).slice(-2);
      // If the countdown is over, display a message
      if (distance < 0) {
        clearInterval(countdownInterval);
        let countdownElement = document.querySelectorAll('.countdown-number')
        countdownElement.forEach(countEl => countEl.ariaHidden="true")
        countdownElement.forEach(countEl => countEl.remove());
        document.getElementById("countdown-message").setAttribute("aria-hidden", "true");
        swiper.update();
        clearInterval(x);
      }
    }, 1000);
  </script>
{% else %}
  <script>
    // Set the date we're counting down to
    var countDownDate = new Date("{{ countdown-date | escape }} 00:00:00").getTime();
    // Update the countdown every 1 second
    var countdownInterval = setInterval(function() {
      // Get the current date and time
      var now = new Date().getTime();
      // Calculate the distance and time remaining between now and the countdown date
      var distance = countDownDate - now;
      var remainingTime = Math.max(distance, 0); // Ensure the remaining time cannot be negative
      // Calculate hours, minutes, and seconds from the remaining time
      var hours = Math.floor(remainingTime / (1000 * 60 * 60));
      var minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);

      // Add a leading zero to the hours, minutes, and seconds numbers if they are less than 10
      hours = hours < 10 ? "0" + hours : hours;
      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds: seconds;

      // Display the countdown in the HTML element
      document.getElementById("hours").innerHTML = hours;
      document.getElementById("minutes").innerHTML = minutes;
      document.getElementById("seconds").innerHTML = seconds;

      // If the countdown is over, display a message
      if (distance < 0) {
        clearInterval(countdownInterval);
        let countdownElement = document.querySelectorAll('.countdown-timer')
        countdownElement.forEach(countEl => countEl.setAttribute("aria-hidden", "true"))
        countdownElement.forEach(countEl => countEl.remove());
        document.getElementById("countdown-message").setAttribute("aria-hidden", "true");
        swiper.update();
      }
    }, 1000);
  </script>
{% endif %}

